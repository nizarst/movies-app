// Generated by view binder compiler. Do not edit!
package com.landfathich.dreamfilm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.landfathich.dreamfilm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MovieDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView MovieDetailName;

  @NonNull
  public final TextView MovieDetailsDescription;

  @NonNull
  public final TextView MovieDetailsRating;

  @NonNull
  public final TextView MovieRatingText;

  @NonNull
  public final CardView detailCardView;

  @NonNull
  public final ImageView detailImageItem;

  @NonNull
  public final View detailSeparationBar;

  @NonNull
  public final ImageView icDetailClose;

  @NonNull
  public final ImageView icHeart;

  @NonNull
  public final TextView textView2;

  private MovieDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView MovieDetailName,
      @NonNull TextView MovieDetailsDescription, @NonNull TextView MovieDetailsRating,
      @NonNull TextView MovieRatingText, @NonNull CardView detailCardView,
      @NonNull ImageView detailImageItem, @NonNull View detailSeparationBar,
      @NonNull ImageView icDetailClose, @NonNull ImageView icHeart, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.MovieDetailName = MovieDetailName;
    this.MovieDetailsDescription = MovieDetailsDescription;
    this.MovieDetailsRating = MovieDetailsRating;
    this.MovieRatingText = MovieRatingText;
    this.detailCardView = detailCardView;
    this.detailImageItem = detailImageItem;
    this.detailSeparationBar = detailSeparationBar;
    this.icDetailClose = icDetailClose;
    this.icHeart = icHeart;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MovieDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MovieDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.movie_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MovieDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Movie_detail_Name;
      TextView MovieDetailName = ViewBindings.findChildViewById(rootView, id);
      if (MovieDetailName == null) {
        break missingId;
      }

      id = R.id.Movie_Details_Description;
      TextView MovieDetailsDescription = ViewBindings.findChildViewById(rootView, id);
      if (MovieDetailsDescription == null) {
        break missingId;
      }

      id = R.id.Movie_details_rating;
      TextView MovieDetailsRating = ViewBindings.findChildViewById(rootView, id);
      if (MovieDetailsRating == null) {
        break missingId;
      }

      id = R.id.Movie_Rating_text;
      TextView MovieRatingText = ViewBindings.findChildViewById(rootView, id);
      if (MovieRatingText == null) {
        break missingId;
      }

      id = R.id.detail_card_View;
      CardView detailCardView = ViewBindings.findChildViewById(rootView, id);
      if (detailCardView == null) {
        break missingId;
      }

      id = R.id.detail_image_item;
      ImageView detailImageItem = ViewBindings.findChildViewById(rootView, id);
      if (detailImageItem == null) {
        break missingId;
      }

      id = R.id.detail_separation_bar;
      View detailSeparationBar = ViewBindings.findChildViewById(rootView, id);
      if (detailSeparationBar == null) {
        break missingId;
      }

      id = R.id.ic_detail_close;
      ImageView icDetailClose = ViewBindings.findChildViewById(rootView, id);
      if (icDetailClose == null) {
        break missingId;
      }

      id = R.id.ic_heart;
      ImageView icHeart = ViewBindings.findChildViewById(rootView, id);
      if (icHeart == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      return new MovieDetailsBinding((ConstraintLayout) rootView, MovieDetailName,
          MovieDetailsDescription, MovieDetailsRating, MovieRatingText, detailCardView,
          detailImageItem, detailSeparationBar, icDetailClose, icHeart, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
